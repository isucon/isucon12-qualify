// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: isuxportal/resources/leaderboard.proto

package resources

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Leaderboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teams        []*Leaderboard_LeaderboardItem `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty"`
	GeneralTeams []*Leaderboard_LeaderboardItem `protobuf:"bytes,2,rep,name=general_teams,json=generalTeams,proto3" json:"general_teams,omitempty"`
	StudentTeams []*Leaderboard_LeaderboardItem `protobuf:"bytes,3,rep,name=student_teams,json=studentTeams,proto3" json:"student_teams,omitempty"`
	HiddenTeams  []*Leaderboard_LeaderboardItem `protobuf:"bytes,7,rep,name=hidden_teams,json=hiddenTeams,proto3" json:"hidden_teams,omitempty"`
	Progresses   []*Leaderboard_LeaderboardItem `protobuf:"bytes,4,rep,name=progresses,proto3" json:"progresses,omitempty"`
	GeneratedAt  *timestamp.Timestamp           `protobuf:"bytes,6,opt,name=generated_at,json=generatedAt,proto3" json:"generated_at,omitempty"`
	Contest      *Contest                       `protobuf:"bytes,5,opt,name=contest,proto3" json:"contest,omitempty"`
}

func (x *Leaderboard) Reset() {
	*x = Leaderboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_isuxportal_resources_leaderboard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Leaderboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leaderboard) ProtoMessage() {}

func (x *Leaderboard) ProtoReflect() protoreflect.Message {
	mi := &file_isuxportal_resources_leaderboard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leaderboard.ProtoReflect.Descriptor instead.
func (*Leaderboard) Descriptor() ([]byte, []int) {
	return file_isuxportal_resources_leaderboard_proto_rawDescGZIP(), []int{0}
}

func (x *Leaderboard) GetTeams() []*Leaderboard_LeaderboardItem {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *Leaderboard) GetGeneralTeams() []*Leaderboard_LeaderboardItem {
	if x != nil {
		return x.GeneralTeams
	}
	return nil
}

func (x *Leaderboard) GetStudentTeams() []*Leaderboard_LeaderboardItem {
	if x != nil {
		return x.StudentTeams
	}
	return nil
}

func (x *Leaderboard) GetHiddenTeams() []*Leaderboard_LeaderboardItem {
	if x != nil {
		return x.HiddenTeams
	}
	return nil
}

func (x *Leaderboard) GetProgresses() []*Leaderboard_LeaderboardItem {
	if x != nil {
		return x.Progresses
	}
	return nil
}

func (x *Leaderboard) GetGeneratedAt() *timestamp.Timestamp {
	if x != nil {
		return x.GeneratedAt
	}
	return nil
}

func (x *Leaderboard) GetContest() *Contest {
	if x != nil {
		return x.Contest
	}
	return nil
}

type Leaderboard_LeaderboardItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scores      []*Leaderboard_LeaderboardItem_LeaderboardScore `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
	BestScore   *Leaderboard_LeaderboardItem_LeaderboardScore   `protobuf:"bytes,2,opt,name=best_score,json=bestScore,proto3" json:"best_score,omitempty"`
	LatestScore *Leaderboard_LeaderboardItem_LeaderboardScore   `protobuf:"bytes,3,opt,name=latest_score,json=latestScore,proto3" json:"latest_score,omitempty"`
	Team        *Team                                           `protobuf:"bytes,16,opt,name=team,proto3" json:"team,omitempty"`
}

func (x *Leaderboard_LeaderboardItem) Reset() {
	*x = Leaderboard_LeaderboardItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_isuxportal_resources_leaderboard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Leaderboard_LeaderboardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leaderboard_LeaderboardItem) ProtoMessage() {}

func (x *Leaderboard_LeaderboardItem) ProtoReflect() protoreflect.Message {
	mi := &file_isuxportal_resources_leaderboard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leaderboard_LeaderboardItem.ProtoReflect.Descriptor instead.
func (*Leaderboard_LeaderboardItem) Descriptor() ([]byte, []int) {
	return file_isuxportal_resources_leaderboard_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Leaderboard_LeaderboardItem) GetScores() []*Leaderboard_LeaderboardItem_LeaderboardScore {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *Leaderboard_LeaderboardItem) GetBestScore() *Leaderboard_LeaderboardItem_LeaderboardScore {
	if x != nil {
		return x.BestScore
	}
	return nil
}

func (x *Leaderboard_LeaderboardItem) GetLatestScore() *Leaderboard_LeaderboardItem_LeaderboardScore {
	if x != nil {
		return x.LatestScore
	}
	return nil
}

func (x *Leaderboard_LeaderboardItem) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

type Leaderboard_LeaderboardItem_LeaderboardScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score     int64                `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	StartedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	MarkedAt  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=marked_at,json=markedAt,proto3" json:"marked_at,omitempty"`
}

func (x *Leaderboard_LeaderboardItem_LeaderboardScore) Reset() {
	*x = Leaderboard_LeaderboardItem_LeaderboardScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_isuxportal_resources_leaderboard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Leaderboard_LeaderboardItem_LeaderboardScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leaderboard_LeaderboardItem_LeaderboardScore) ProtoMessage() {}

func (x *Leaderboard_LeaderboardItem_LeaderboardScore) ProtoReflect() protoreflect.Message {
	mi := &file_isuxportal_resources_leaderboard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leaderboard_LeaderboardItem_LeaderboardScore.ProtoReflect.Descriptor instead.
func (*Leaderboard_LeaderboardItem_LeaderboardScore) Descriptor() ([]byte, []int) {
	return file_isuxportal_resources_leaderboard_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Leaderboard_LeaderboardItem_LeaderboardScore) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Leaderboard_LeaderboardItem_LeaderboardScore) GetStartedAt() *timestamp.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *Leaderboard_LeaderboardItem_LeaderboardScore) GetMarkedAt() *timestamp.Timestamp {
	if x != nil {
		return x.MarkedAt
	}
	return nil
}

var File_isuxportal_resources_leaderboard_proto protoreflect.FileDescriptor

var file_isuxportal_resources_leaderboard_proto_rawDesc = []byte{
	0x0a, 0x26, 0x69, 0x73, 0x75, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x69, 0x73, 0x75, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x69, 0x73, 0x75, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x65, 0x61, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x69, 0x73, 0x75, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x08, 0x0a, 0x0b, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x4d, 0x0a, 0x05, 0x74, 0x65,
	0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x69, 0x73, 0x75, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x5c, 0x0a, 0x0d, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x69, 0x73, 0x75, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x5c, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x69, 0x73, 0x75, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x5a, 0x0a, 0x0c, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x69, 0x73,
	0x75, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x54, 0x65, 0x61, 0x6d,
	0x73, 0x12, 0x57, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x69, 0x73, 0x75, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x73, 0x75,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x1a, 0x9e, 0x04, 0x0a, 0x0f, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x60, 0x0a, 0x06,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x69,
	0x73, 0x75, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x67,
	0x0a, 0x0a, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x48, 0x2e, 0x69, 0x73, 0x75, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x09, 0x62, 0x65,
	0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x6b, 0x0a, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e,
	0x69, 0x73, 0x75, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x73, 0x75, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x1a, 0x9c, 0x01, 0x0a, 0x10, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x37, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x73, 0x75, 0x63, 0x6f, 0x6e, 0x2f, 0x69,
	0x73, 0x75, 0x63, 0x6f, 0x6e, 0x31, 0x32, 0x2d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x67, 0x6f, 0x2f, 0x69, 0x73, 0x75, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_isuxportal_resources_leaderboard_proto_rawDescOnce sync.Once
	file_isuxportal_resources_leaderboard_proto_rawDescData = file_isuxportal_resources_leaderboard_proto_rawDesc
)

func file_isuxportal_resources_leaderboard_proto_rawDescGZIP() []byte {
	file_isuxportal_resources_leaderboard_proto_rawDescOnce.Do(func() {
		file_isuxportal_resources_leaderboard_proto_rawDescData = protoimpl.X.CompressGZIP(file_isuxportal_resources_leaderboard_proto_rawDescData)
	})
	return file_isuxportal_resources_leaderboard_proto_rawDescData
}

var file_isuxportal_resources_leaderboard_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_isuxportal_resources_leaderboard_proto_goTypes = []interface{}{
	(*Leaderboard)(nil),                                  // 0: isuxportal.proto.resources.Leaderboard
	(*Leaderboard_LeaderboardItem)(nil),                  // 1: isuxportal.proto.resources.Leaderboard.LeaderboardItem
	(*Leaderboard_LeaderboardItem_LeaderboardScore)(nil), // 2: isuxportal.proto.resources.Leaderboard.LeaderboardItem.LeaderboardScore
	(*timestamp.Timestamp)(nil),                          // 3: google.protobuf.Timestamp
	(*Contest)(nil),                                      // 4: isuxportal.proto.resources.Contest
	(*Team)(nil),                                         // 5: isuxportal.proto.resources.Team
}
var file_isuxportal_resources_leaderboard_proto_depIdxs = []int32{
	1,  // 0: isuxportal.proto.resources.Leaderboard.teams:type_name -> isuxportal.proto.resources.Leaderboard.LeaderboardItem
	1,  // 1: isuxportal.proto.resources.Leaderboard.general_teams:type_name -> isuxportal.proto.resources.Leaderboard.LeaderboardItem
	1,  // 2: isuxportal.proto.resources.Leaderboard.student_teams:type_name -> isuxportal.proto.resources.Leaderboard.LeaderboardItem
	1,  // 3: isuxportal.proto.resources.Leaderboard.hidden_teams:type_name -> isuxportal.proto.resources.Leaderboard.LeaderboardItem
	1,  // 4: isuxportal.proto.resources.Leaderboard.progresses:type_name -> isuxportal.proto.resources.Leaderboard.LeaderboardItem
	3,  // 5: isuxportal.proto.resources.Leaderboard.generated_at:type_name -> google.protobuf.Timestamp
	4,  // 6: isuxportal.proto.resources.Leaderboard.contest:type_name -> isuxportal.proto.resources.Contest
	2,  // 7: isuxportal.proto.resources.Leaderboard.LeaderboardItem.scores:type_name -> isuxportal.proto.resources.Leaderboard.LeaderboardItem.LeaderboardScore
	2,  // 8: isuxportal.proto.resources.Leaderboard.LeaderboardItem.best_score:type_name -> isuxportal.proto.resources.Leaderboard.LeaderboardItem.LeaderboardScore
	2,  // 9: isuxportal.proto.resources.Leaderboard.LeaderboardItem.latest_score:type_name -> isuxportal.proto.resources.Leaderboard.LeaderboardItem.LeaderboardScore
	5,  // 10: isuxportal.proto.resources.Leaderboard.LeaderboardItem.team:type_name -> isuxportal.proto.resources.Team
	3,  // 11: isuxportal.proto.resources.Leaderboard.LeaderboardItem.LeaderboardScore.started_at:type_name -> google.protobuf.Timestamp
	3,  // 12: isuxportal.proto.resources.Leaderboard.LeaderboardItem.LeaderboardScore.marked_at:type_name -> google.protobuf.Timestamp
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_isuxportal_resources_leaderboard_proto_init() }
func file_isuxportal_resources_leaderboard_proto_init() {
	if File_isuxportal_resources_leaderboard_proto != nil {
		return
	}
	file_isuxportal_resources_team_proto_init()
	file_isuxportal_resources_contest_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_isuxportal_resources_leaderboard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Leaderboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_isuxportal_resources_leaderboard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Leaderboard_LeaderboardItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_isuxportal_resources_leaderboard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Leaderboard_LeaderboardItem_LeaderboardScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_isuxportal_resources_leaderboard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_isuxportal_resources_leaderboard_proto_goTypes,
		DependencyIndexes: file_isuxportal_resources_leaderboard_proto_depIdxs,
		MessageInfos:      file_isuxportal_resources_leaderboard_proto_msgTypes,
	}.Build()
	File_isuxportal_resources_leaderboard_proto = out.File
	file_isuxportal_resources_leaderboard_proto_rawDesc = nil
	file_isuxportal_resources_leaderboard_proto_goTypes = nil
	file_isuxportal_resources_leaderboard_proto_depIdxs = nil
}
